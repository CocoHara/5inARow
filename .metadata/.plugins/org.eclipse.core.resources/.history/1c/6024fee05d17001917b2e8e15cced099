package client;

import java.io.IOException;
import java.io.StringReader;

import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import org.xmlpull.v1.XmlPullParserFactory;

public class ParseWinner 
{
	boolean inWinner = false;
	boolean inTheWinner = false;
	
	String winner;
	
	public String doParseWinner (String s)
	{
		try
		{
			XmlPullParserFactory factory = XmlPullParserFactory.newInstance();
			XmlPullParser pullParser = factory.newPullParser();
			pullParser.setInput(new StringReader(s));
			processDocument(pullParser);
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
		
		return winner;
	}
	
	public void processDocument (XmlPullParser pullParser) throws XmlPullParserException, IOException
	{
		int eventType = pullParser.getEventType();
		
		do
		{
			if (eventType == XmlPullParser.START_DOCUMENT)
			{
				//System.out.println("Start Document");
			}
			else if (eventType == XmlPullParser.END_DOCUMENT)
			{
				//System.out.println("End Document");
			}
			else if (eventType == XmlPullParser.START_TAG)
			{
				processStartElement(pullParser);
			}
			else if (eventType == XmlPullParser.END_TAG)
			{
				processEndElement(pullParser);
			}
			else if (eventType == XmlPullParser.TEXT)
			{
				processText(pullParser);
			}
			
			eventType = pullParser.next();
		} while (eventType != XmlPullParser.END_DOCUMENT);
	}
	
	public void processStartElement (XmlPullParser event)
	{
		String name = event.getName();
		
		if (name.equals("games"))
		{
			inWinner = true;
		}
		else if (name.equals("rowcol"))
		{
			inTheWinner = true;
		}
	}
	
	public void processText (XmlPullParser event) throws XmlPullParserException
	{
		if (inTheWinner)
		{
			winner = event.getText();
		}
	}
	
	public void processEndElement (XmlPullParser event)
	{
		String name = event.getName();
		
		if (name.equals("games"))
		{
			inWinner = false;
		}
		else if (name.equals("rowcol"))
		{
			inTheWinner = false;
		}
	}
}
