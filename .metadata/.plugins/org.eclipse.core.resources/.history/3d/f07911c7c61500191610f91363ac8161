package client;

import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import org.apache.http.HttpEntity;
import org.apache.http.NameValuePair;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.utils.URIBuilder;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.message.BasicNameValuePair;

import model.Game;
import model.Player;

public class CreatePlayer 
{
	private static Player player1;
	private static Player player2;
	
	public static void createPlayer()
	{
		Scanner scanner = new Scanner(System.in);
		
		System.out.print("Player 1 enter your name: ");
		String p1Name = scanner.nextLine();
		
		System.out.print("Player 2 enter your name: ");
		String p2Name = scanner.nextLine();
		
		URI uri;
		try 
		{
			uri = new URIBuilder().setScheme("http").setHost("localhost")
					.setPort(8080).setPath("/5inARowServer/rest/game").build();
			
			HttpPost httpPost = new HttpPost(uri);
			httpPost.setHeader("Accept", "text/html");
			CloseableHttpClient client = HttpClients.createDefault();
			
			// POST
			List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(1);
			nameValuePairs.add(new BasicNameValuePair("p1Name", p1Name));
			nameValuePairs.add(new BasicNameValuePair("p2Name", p2Name));
			
			httpPost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
			CloseableHttpResponse response = client.execute(httpPost);
		} 
		catch (Exception e) 
		{
			e.printStackTrace();
		}
	}
	
	public static void getPlayer()
	{
		try
		{
			CloseableHttpResponse response = null;
			
			try
			{
				URI uri = new URIBuilder().setScheme("http")
						.setHost("localhost")
						.setPort(8080)
						.setPath("/5inARowServer/rest/game")
						.build();
				
				//System.out.println(uri.toString());
				HttpGet httpGet = new HttpGet(uri);
				httpGet.setHeader("Accept", "application/xml");
				
				CloseableHttpClient httpClient = HttpClients.createDefault();
				response = httpClient.execute(httpGet);
				
				HttpEntity entity = response.getEntity();
				String text = MainGame.getASCIIContentFromEntity(entity);
				//System.out.println(text);
				
				List<Game> gamePrintOut = new ParseGameBoard().doParseGameBoard(text);
				
				for (Game game : gamePrintOut)
				{
					if ((int)game.getColumn() == 0)
					{
						System.out.println();
					}
					System.out.print("[" + game.getCounter() + "]");
				}
				
				System.out.println();
				for (int i=0; i<8; i++)
				{
					System.out.print(" " + i + " ");
				}
			}
			finally
			{
				response.close();
			}
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
}
